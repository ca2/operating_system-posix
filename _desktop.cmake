

if(${GNOME_DESKTOP})
   execute_process(COMMAND gnome-shell --version OUTPUT_VARIABLE GNOME_SHELL_VERSION_RAW OUTPUT_STRIP_TRAILING_WHITESPACE)
   message(STATUS "GNOME_SHELL_VERSION_RAW is ${GNOME_SHELL_VERSION_RAW}")
   string(TOLOWER ${GNOME_SHELL_VERSION_RAW} GNOME_RELEASE)
   #message(STATUS "GNOME_RELEASE now is ${GNOME_RELEASE}")
   string(REPLACE "gnome" "" GNOME_RELEASE ${GNOME_RELEASE})
   string(REPLACE "shell" "" GNOME_RELEASE ${GNOME_RELEASE})
   string(STRIP ${GNOME_RELEASE} GNOME_RELEASE)
   message(STATUS "GNOME_RELEASE is ${GNOME_RELEASE}")
   string(FIND ${GNOME_RELEASE} "." GNOME_RELEASE_FIRST_DOT)
   string(SUBSTRING ${GNOME_RELEASE} 0 ${GNOME_RELEASE_FIRST_DOT} GNOME_RELEASE_MAJOR)
   message(STATUS "GNOME_RELEASE_MAJOR is ${GNOME_RELEASE_MAJOR}")
   if(${GNOME_RELEASE_MAJOR} GREATER_EQUAL 40)
      #set(HAS_GTK4 TRUE)
      #message(STATUS "HAS_GTK4 is ${HAS_GTK4}")
      #add_compile_definitions(HAS_GTK4)
      set(GNOME_RELEASE_MAJOR "3")
   endif()
   if(${GNOME_RELEASE_MAJOR} GREATER_EQUAL 3)
      set(HAS_GTK3 TRUE)
      message(STATUS "HAS_GTK3 is ${HAS_GTK3}")
      add_compile_definitions(HAS_GTK3)
   endif()
elseif(${KDE_DESKTOP})
   execute_process(COMMAND plasmashell --version OUTPUT_VARIABLE PLASMA_SHELL_VERSION_RAW OUTPUT_STRIP_TRAILING_WHITESPACE)
   message(STATUS "PLASMA_SHELL_VERSION_RAW is ${PLASMA_SHELL_VERSION_RAW}")
   string(TOLOWER ${PLASMA_SHELL_VERSION_RAW} PLASMA_RELEASE)
   #message(STATUS "PLASMA_RELEASE now is ${PLASMA_RELEASE}")
   string(REPLACE "plasma" "" PLASMA_RELEASE ${PLASMA_RELEASE})
   string(REPLACE "shell" "" PLASMA_RELEASE ${PLASMA_RELEASE})
   string(STRIP ${PLASMA_RELEASE} PLASMA_RELEASE)
   message(STATUS "PLASMA_RELEASE is ${PLASMA_RELEASE}")
   string(FIND ${PLASMA_RELEASE} "." PLASMA_RELEASE_FIRST_DOT)
   string(SUBSTRING ${PLASMA_RELEASE} 0 ${PLASMA_RELEASE_FIRST_DOT} PLASMA_RELEASE_MAJOR)
   message(STATUS "PLASMA_RELEASE_MAJOR is ${PLASMA_RELEASE_MAJOR}")
   if(${PLASMA_RELEASE_MAJOR} GREATER_EQUAL "6")
      set(PLASMA_RELEASE_MAJOR "6")
      set(HAS_KDE6 TRUE)
      set(HAS_KDE5 FALSE)
      add_compile_definitions(HAS_KDE6)
   endif()
   if(${PLASMA_RELEASE_MAJOR} EQUAL "5")
      set(PLASMA_RELEASE_MAJOR "5")
      set(HAS_KDE6 FALSE)
      set(HAS_KDE5 TRUE)
      add_compile_definitions(HAS_KDE5)
   endif()
   message(STATUS "HAS_KDE6 is ${HAS_KDE6}")
   message(STATUS "HAS_KDE5 is ${HAS_KDE5}")
endif()



