

if(${KDE_DESKTOP})
   execute_process(COMMAND plasmashell --version OUTPUT_VARIABLE PLASMA_SHELL_VERSION_RAW OUTPUT_STRIP_TRAILING_WHITESPACE)
   message(STATUS "PLASMA_SHELL_VERSION_RAW is ${PLASMA_SHELL_VERSION_RAW}")
   string(TOLOWER ${PLASMA_SHELL_VERSION_RAW} PLASMA_RELEASE)
   #message(STATUS "PLASMA_RELEASE now is ${PLASMA_RELEASE}")
   string(REPLACE "plasma" "" PLASMA_RELEASE ${PLASMA_RELEASE})
   string(REPLACE "shell" "" PLASMA_RELEASE ${PLASMA_RELEASE})
   string(STRIP ${PLASMA_RELEASE} PLASMA_RELEASE)
   message(STATUS "PLASMA_RELEASE is ${PLASMA_RELEASE}")
   string(FIND ${PLASMA_RELEASE} "." PLASMA_RELEASE_FIRST_DOT)
   string(SUBSTRING ${PLASMA_RELEASE} 0 ${PLASMA_RELEASE_FIRST_DOT} PLASMA_RELEASE_MAJOR)
   message(STATUS "PLASMA_RELEASE_MAJOR is ${PLASMA_RELEASE_MAJOR}")
   if(${PLASMA_RELEASE_MAJOR} GREATER_EQUAL "6")
      set(PLASMA_RELEASE_MAJOR "6")
      set(HAS_KDE6 TRUE)
      set(HAS_KDE5 FALSE)
      add_compile_definitions(HAS_KDE6)
      set(default_nano_user nano_user_kde6)
      set(default_innate_ui innate_ui_kde6)
   endif()
   if(${PLASMA_RELEASE_MAJOR} EQUAL "5")
      set(PLASMA_RELEASE_MAJOR "5")
      set(HAS_KDE6 FALSE)
      set(HAS_KDE5 TRUE)
      add_compile_definitions(HAS_KDE5)
      set(default_nano_user nano_user_kde5)
      set(default_innate_ui innate_ui_kde5)
   endif()
   message(STATUS "HAS_KDE6 is ${HAS_KDE6}")
   message(STATUS "HAS_KDE5 is ${HAS_KDE5}")
endif()



